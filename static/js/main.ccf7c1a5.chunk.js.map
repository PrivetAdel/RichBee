{"version":3,"sources":["redux/actions/index.js","redux/reducers/rootReducer.js","redux/store.js","components/Movie.jsx","components/Search.jsx","pages/MainPage.jsx","components/Similar.jsx","components/PopupTrailer.jsx","pages/MoviePage.jsx","App.jsx","index.js"],"names":["GET_MOVIES_ID","GET_MOVIE","SET_SIMILAR_MOVIE","SET_TRAILER","DELETE_TRAILER","requestOptions","method","redirect","fetchMoviesId","title","dispatch","fetch","then","response","json","data","results","map","result","moviesId","push","id","getMoviesId","flat","catch","error","console","type","payload","fetchMovie","getMovie","erroe","movie","setTrailer","trailer","initialState","movies","rootReducer","state","action","moviesIdWithSimilar","newMovie","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","Movie","genres","useDispatch","useSelector","useEffect","className","to","alt","src","image","ratings","imDb","split","slice","join","year","awards","Search","handleSendRequest","lightTheme","darkTheme","React","useState","setTitle","classNames","placeholder","onChange","evt","target","value","onClick","preventDefault","MainPage","length","movieId","maxLengthText","text","maxLength","Similar","plot","imDbRating","PopupTrailer","closePopup","videoId","frameBorder","allowFullScreen","MoviePage","useParams","isOpen","setIsOpen","toglePopupTrailer","s","fetchTrailer","disabled","videoUrl","similars","similar","key","App","path","component","exact","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ccf7c1a5.chunk.js","sourcesContent":["export const GET_MOVIES_ID = 'GET_MOVIES_ID';\r\nexport const SET_MOVIE = 'SET_MOVIE';\r\nexport const GET_MOVIE = 'GET_MOVIE';\r\nexport const SET_SIMILAR_MOVIE = 'SET_SIMILAR_MOVIE';\r\nexport const SET_TRAILER = 'SET_TRAILER';\r\nexport const DELETE_TRAILER = 'DELETE_TRAILER';\r\n\r\nconst requestOptions = {\r\n  method: 'GET',\r\n  redirect: 'follow'\r\n};\r\n\r\n// const key = 'k_8zvk1y4n';\r\n// const key = 'k_xrjol9cl';\r\n\r\nexport const fetchMoviesId = (title) => (dispatch) => {\r\n  const url = 'https://imdb-api.com/en/API/SearchMovie/k_8zvk1y4n/';\r\n\r\n  fetch(`${url}${title}`, requestOptions)\r\n    .then(response => response.json())\r\n    .then(data => data.results.map(result => {\r\n      let moviesId = [];\r\n      moviesId.push(result.id);\r\n      return moviesId;\r\n    }))\r\n    .then(moviesId => dispatch(getMoviesId(moviesId.flat())))\r\n    .catch(error => console.error('Error', error));\r\n};\r\n\r\nexport const getMoviesId = (moviesId) => ({\r\n  type: GET_MOVIES_ID,\r\n  payload: moviesId\r\n});\r\n\r\nexport const fetchMovie = (id) => (dispatch) => {\r\n  const url = 'https://imdb-api.com/en/API/Title/k_8zvk1y4n/';\r\n  const options = '/Ratings';\r\n\r\n  fetch(`${url}${id}${options}`, requestOptions)\r\n    .then(response => response.json())\r\n    .then(data => dispatch(getMovie(data)))\r\n    .catch(error => console.erroe('Error', error))\r\n};\r\n\r\nexport const getMovie = (movie) => ({\r\n  type: GET_MOVIE,\r\n  payload: movie\r\n});\r\n\r\nexport const setMovie = (movie) => ({\r\n  type: SET_MOVIE,\r\n  payload: movie\r\n});\r\n\r\nexport const setSimilarMovie = (id) => ({\r\n  type: SET_SIMILAR_MOVIE,\r\n  payload: id\r\n});\r\n\r\nexport const fetchTrailer = (id) => (dispatch) => {\r\n  const url = 'https://imdb-api.com/en/API/YouTubeTrailer/k_8zvk1y4n/';\r\n\r\n  fetch(`${url}${id}`, requestOptions)\r\n    .then(response => response.json())\r\n    .then(data => dispatch(setTrailer(data)))\r\n    .catch(error => console.erroe('Error', error))\r\n};\r\n\r\nexport const setTrailer = (trailer) => ({\r\n  type: SET_TRAILER,\r\n  payload: trailer\r\n});\r\n\r\nexport const deleteTrailer = () => ({\r\n  type: DELETE_TRAILER\r\n});\r\n","import {GET_MOVIES_ID, GET_MOVIE, SET_SIMILAR_MOVIE, SET_TRAILER, DELETE_TRAILER} from '../actions';\r\n\r\nconst initialState = {\r\n  moviesId: [],\r\n  movies: {},\r\n  trailer: ''\r\n};\r\n\r\nconst rootReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case GET_MOVIES_ID:\r\n      return {\r\n        ...state,\r\n        moviesId: action.payload\r\n      };\r\n\r\n    case SET_SIMILAR_MOVIE:\r\n      const moviesIdWithSimilar = [\r\n        ...state.moviesId,\r\n        action.payload\r\n      ]\r\n      return {\r\n        ...state,\r\n        moviesId: moviesIdWithSimilar\r\n      };\r\n\r\n    case GET_MOVIE: \r\n      const newMovie = {\r\n        ...state.movies,\r\n        [action.payload.id]: action.payload\r\n      }\r\n      return {\r\n        ...state,\r\n        movies: newMovie\r\n      };\r\n\r\n    case SET_TRAILER: \r\n      return {\r\n        ...state,\r\n        trailer: action.payload\r\n      };\r\n\r\n    case DELETE_TRAILER:\r\n      return {\r\n        ...state,\r\n        trailer: ''\r\n      };\r\n      \r\n    default: \r\n      return state\r\n  };\r\n};\r\n\r\nexport default rootReducer;\r\n","import {createStore, applyMiddleware, compose} from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer from './reducers/rootReducer';\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  composeEnhancers(applyMiddleware(thunk))\r\n);\r\n\r\nexport default store;\r\n","import React, {useEffect} from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {fetchMovie} from '../redux/actions';\r\n\r\nconst shortGenres = (genres) => {\r\n  return genres.split(', ').slice(0, 3).join(', ')\r\n}\r\n\r\nconst Movie = ({id}) => {\r\n  const dispatch = useDispatch();\r\n  const movie = useSelector((rootReducer) => rootReducer.movies[id]);\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchMovie(id));\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"movie\">\r\n      {\r\n        movie ? (\r\n          <>\r\n            <Link className=\"movie__poster-block\" to={`/movies/${id}`}>\r\n              <img className=\"movie__poster\" alt=\"movie poster\" src={movie.image} />\r\n            </Link>\r\n\r\n            <div className=\"movie__info-block\">\r\n              <div className=\"movie__block--title\">\r\n                <Link className=\"movie__title\" to={`/movies/${id}`}>{movie.title}</Link>\r\n                <span className=\"movie__rating-bg\">\r\n                  <p className=\"movie__rating\">IMDb {movie.ratings.imDb}</p>\r\n                </span>\r\n              </div>\r\n              \r\n              <div className=\"movie__block--info\">\r\n                <p className=\"movie__type\">{movie.type}</p>\r\n                <p className=\"movie__genre\">{shortGenres(movie.genres)}</p>\r\n                <p className=\"movie__year\">{movie.year}</p>\r\n              </div>\r\n\r\n              <div className=\"movie__block--awards\">\r\n                <p className=\"movie__awards\">{movie.awards}</p>\r\n              </div>\r\n            </div>\r\n          </>\r\n        ) : ''\r\n      }\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Movie;\r\n","import React from 'react';\r\nimport classNames from 'classnames';\r\n\r\nconst Search = ({handleSendRequest, lightTheme = false, darkTheme = false}) => {\r\n  const [title, setTitle] = React.useState('');\r\n\r\n  const handleSubmit = (evt) => {\r\n    evt.preventDefault();\r\n    handleSendRequest(title);\r\n    setTitle('');\r\n  };\r\n\r\n  const handleInputTitle = (evt) => {\r\n    setTitle(evt.target.value);\r\n  };\r\n\r\n  return (\r\n    <form className={classNames({\r\n      \"dark-search\": darkTheme,\r\n      \"light-search\": lightTheme\r\n    })}>\r\n      <input\r\n        className={classNames({\r\n          \"dark-search__input\": darkTheme,\r\n          \"light-search__input\": lightTheme\r\n        })}\r\n        type=\"text\"\r\n        placeholder=\"Type here smth...\"\r\n        onChange={handleInputTitle}\r\n        value={title}\r\n      />\r\n\r\n      <input\r\n        className={classNames({\r\n          \"dark-search__button\": darkTheme,\r\n          \"light-search__button\": lightTheme\r\n        })}\r\n        type=\"submit\"\r\n        onClick={handleSubmit}\r\n        value=\"Search\"\r\n      />\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default Search;\r\n","import React from 'react';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport Movie from '../components/Movie';\r\nimport Search from '../components/Search';\r\nimport {fetchMoviesId} from '../redux/actions';\r\n\r\nconst MainPage = () => {\r\n  const dispatch = useDispatch();\r\n  const moviesId = useSelector((rootReducer) => rootReducer.moviesId);\r\n\r\n  const sendRequest = (title) => {\r\n    dispatch(fetchMoviesId(title));\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"background-pic\"></div>\r\n      <div className=\"main-page\">\r\n        <h1>Unlimited&nbsp;movies, TV&nbsp;shows, and&nbsp;more.</h1>\r\n        <h3>Watch anywhere. Cancel&nbsp;anytime.</h3>\r\n        <Search lightTheme handleSendRequest={sendRequest} />\r\n        {\r\n          moviesId.length ? moviesId.map((movieId) => {\r\n            return <Movie id={movieId} key={movieId} />\r\n          }) : ''\r\n        }\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MainPage;\r\n","import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport {useDispatch} from 'react-redux';\r\nimport {fetchMovie} from '../redux/actions';\r\n\r\nconst maxLengthText = (text, maxLength) => {\r\n  if (text.length > maxLength) {\r\n    const shortText = text.slice(0, maxLength - 3);\r\n    return shortText + '...';\r\n  } \r\n  return text;\r\n}\r\n\r\nconst Similar = ({id, title, type, genres, image, year, plot, imDbRating}) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const followTheLink = () => {\r\n    dispatch(fetchMovie(id));\r\n  }\r\n\r\n  return (\r\n    <div className=\"similar\">\r\n      <img className=\"similar__poster\" alt=\"similar movie poster\" src={image} />\r\n\r\n      <div className=\"similar__overlay\">\r\n        <div className=\"similar__info-block\">\r\n          <Link className=\"similar__title\" onClick={followTheLink} to={`/movies/${id}`}>{maxLengthText(title, 33)}</Link>\r\n\r\n          <p className=\"similar__genre\">{genres}</p>\r\n          <p className=\"similar__type\">{type} {year}</p>\r\n\r\n          <p className=\"similar__text\">{maxLengthText(plot, 150)}</p>\r\n\r\n          <span className=\"similar__rating-bg\">\r\n            <p className=\"similar__rating\">IMDb {imDbRating}</p>\r\n          </span>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Similar;\r\n","import React from 'react';\r\n\r\nconst PopupTrailer = ({closePopup, trailer}) => {\r\n  return (\r\n    <div className=\"trailer-overlay\" onClick={closePopup}>\r\n      <div className=\"trailer-container\">\r\n        <iframe \r\n          src={`https://www.youtube.com/embed/${trailer.videoId}`} \r\n          frameBorder=\"0\" \r\n          allowFullScreen \r\n          className=\"trailer\"\r\n          title={trailer.title} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PopupTrailer;\r\n","import React, {useEffect} from 'react';\r\nimport {Link, useParams} from 'react-router-dom';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {fetchMoviesId, fetchTrailer, deleteTrailer} from '../redux/actions';\r\nimport Search from '../components/Search';\r\nimport Similar from '../components/Similar';\r\nimport PopupTrailer from '../components/PopupTrailer';\r\n\r\nconst MoviePage = () => {\r\n  const {id} = useParams();\r\n  const dispatch = useDispatch();\r\n  const [isOpen, setIsOpen] = React.useState(false);\r\n  const movie = useSelector((rootReducer) => rootReducer.movies[id]);\r\n  const trailer = useSelector((rootReducer) => rootReducer.trailer);\r\n\r\n  const toglePopupTrailer = () => {\r\n    setIsOpen((s) => !s)\r\n  }\r\n\r\n  const sendRequest = (title) => {\r\n    dispatch(fetchMoviesId(title));\r\n  };\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchTrailer(id));\r\n\r\n    return () => dispatch(deleteTrailer())\r\n  }, [id]);\r\n\r\n  return (\r\n    <div className=\"movie-page\">\r\n      <header className=\"movie-page__header\">\r\n        <Link className=\"movie-page__header-link\" to=\"/main\">Richbee Shows</Link>\r\n        <Search darkTheme handleSendRequest={sendRequest} />\r\n      </header>\r\n\r\n      {\r\n        movie ? (\r\n          <>\r\n            <section className=\"main-block\">\r\n              {\r\n                isOpen ? (<PopupTrailer closePopup={toglePopupTrailer} trailer={trailer} />) : ''\r\n              }\r\n              <div className=\"main-block__poster-block\">\r\n                <img className=\"main-block__poster\" alt=\"film poster\" src={movie.image} />\r\n              </div>\r\n              <div className=\"background-gradient\"></div>\r\n              <div className=\"main-block__wrapper\">\r\n                <h1 className=\"main-block__title\">{movie.title}</h1>\r\n                <div className=\"main-block__inner\">\r\n                  <span className=\"main-block__rating-bg\">\r\n                    <p className=\"main-block__rating\">IMDb {movie.ratings.imDb}</p>\r\n                  </span>\r\n                  <p className=\"main-block__genre\">{movie.genres}</p>\r\n                  <p className=\"main-block__type\">{movie.type}</p>\r\n                  <p className=\"main-block__year\">{movie.year}</p>\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"main-block__wrap\">\r\n                <button className=\"main-block__video-btn\" onClick={toglePopupTrailer} disabled={!trailer.videoUrl}>\r\n                  Watch\r\n                </button>\r\n                <p className=\"main-block__awards\">{movie.awards}</p>\r\n              </div>\r\n            </section>\r\n\r\n            <section className=\"description-block\">\r\n              <div className=\"description-block__wrapper\">\r\n                <h2 className=\"description-block__title\">Watch {movie.title} on Richbee Shows</h2>\r\n                <p className=\"description-block__text\">{movie.plot}</p>\r\n              </div>\r\n              \r\n              <div className=\"similar-block\">\r\n                <h3 className=\"similar-block__title\">You may also like</h3>\r\n                <div className=\"similar-block__wrapper\">\r\n                  {\r\n                    movie.similars ? (movie.similars.map((similar) => <Similar {...similar} key={similar.id} />)) : ''\r\n                  }\r\n                </div>\r\n              </div>\r\n            </section>\r\n          </>  \r\n        ) : ''\r\n      }\r\n\r\n      <footer className=\"movie-page__footer\">\r\n        <p>Richbee Shows</p>\r\n      </footer>\r\n    </div>\r\n  )\r\n};\r\n\r\nexport default MoviePage;\r\n","import React from 'react';\r\nimport {Switch, Route, Redirect} from 'react-router-dom';\r\nimport {MainPage, MoviePage} from './pages';\r\n\r\nconst App = () => {\r\n  return (\r\n    <Switch>\r\n      <Route path=\"/main\" component={MainPage} />\r\n      <Route path=\"/movies/:id\" component={MoviePage} />\r\n      <Route exact path=\"/\">\r\n        <Redirect to=\"/main\" />\r\n      </Route>\r\n    </Switch>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport {Provider} from 'react-redux';\r\nimport store from './redux/store';\r\nimport {BrowserRouter as Router} from 'react-router-dom';\r\nimport App from './App';\r\nimport './scss/app.scss';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store} >\r\n      <Router>\r\n        <App />\r\n      </Router>\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}